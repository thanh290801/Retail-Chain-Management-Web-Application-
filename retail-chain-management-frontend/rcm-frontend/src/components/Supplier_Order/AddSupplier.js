import { useState } from "react";
import { Form, Button, Container, Row, Col } from "react-bootstrap";
import axios from "axios";
import { useNavigate } from "react-router-dom";

const CreateSupplierForm = () => {
    const [formData, setFormData] = useState({
        Name: "",
        TaxCode: "",
        Website: "",
        Email: "",
        Phone: "",
        Fax: "",
        Address: "",
        ContactPerson: "",
        RPhone: "",
    });
    const navigate = useNavigate();
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState(null);

    const handleChange = (e) => {
        setFormData({ ...formData, [e.target.name]: e.target.value });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        setLoading(true);
        setError(null);

        console.log("üîπ D·ªØ li·ªáu g·ª≠i l√™n API:", formData); // üü¢ Ki·ªÉm tra d·ªØ li·ªáu tr∆∞·ªõc khi g·ª≠i

        try {
            const response = await axios.post("https://localhost:5000/api/Supplier", formData, {
                headers: { "Content-Type": "application/json" },
            });
            alert("Nh√† cung c·∫•p ƒë√£ ƒë∆∞·ª£c th√™m th√†nh c√¥ng!");
            setFormData({
                Name: "",
                TaxCode: "",
                Website: "",
                Email: "",
                Phone: "",
                Fax: "",
                Address: "",
                ContactPerson: "",
                RPhone: "",
            });
            navigate('/supplierlist');
        } catch (err) {
            console.error("‚ùå L·ªói API:", err.response?.data || err.message); // üî¥ Log l·ªói c·ª• th·ªÉ
            setError("C√≥ l·ªói x·∫£y ra khi th√™m nh√† cung c·∫•p. Vui l√≤ng th·ª≠ l·∫°i!");
        } finally {
            setLoading(false);
        }
    };

    return (
        <Container className="mt-4">
            <Row className="justify-content-md-center">
                <Col md={8}>
                    <h2 className="mb-4">üìù Th√™m m·ªõi Nh√† cung c·∫•p</h2>

                    {error && <p className="text-danger">{error}</p>}
                    <Form onSubmit={handleSubmit}>
                        <Form.Group className="mb-3">
                            <Form.Label>T√™n nh√† cung c·∫•p</Form.Label>
                            <Form.Control type="text" placeholder="Nh·∫≠p t√™n nh√† cung c·∫•p" name="Name" value={formData.Name} onChange={handleChange} required />
                        </Form.Group>
                        <Form.Group className="mb-3">
                            <Form.Label>M√£ s·ªë thu·∫ø</Form.Label>
                            <Form.Control type="text" placeholder="Nh·∫≠p m√£ s·ªë thu·∫ø" name="TaxCode" value={formData.TaxCode} onChange={handleChange} />
                        </Form.Group>
                        <Form.Group className="mb-3">
                            <Form.Label>Website</Form.Label>
                            <Form.Control type="text" placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ website" name="Website" value={formData.Website} onChange={handleChange} />
                        </Form.Group>
                        <Form.Group className="mb-3">
                            <Form.Label>Email</Form.Label>
                            <Form.Control type="email" placeholder="Nh·∫≠p email li√™n h·ªá" name="Email" value={formData.Email} onChange={handleChange} />
                        </Form.Group>
                        <Form.Group className="mb-3">
                            <Form.Label>S·ªë ƒëi·ªán tho·∫°i</Form.Label>
                            <Form.Control type="text" placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i" name="Phone" value={formData.Phone} onChange={handleChange} required />
                        </Form.Group>
                        <Form.Group className="mb-3">
                            <Form.Label>S·ªë Fax</Form.Label>
                            <Form.Control type="text" placeholder="Nh·∫≠p s·ªë Fax (n·∫øu c√≥)" name="Fax" value={formData.Fax} onChange={handleChange} />
                        </Form.Group>
                        <Form.Group className="mb-3">
                            <Form.Label>ƒê·ªãa ch·ªâ chi ti·∫øt</Form.Label>
                            <Form.Control type="text" placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ chi ti·∫øt" name="Address" value={formData.Address} onChange={handleChange} />
                        </Form.Group>
                        <h4 className="mt-4">üë§ Th√¥ng tin ng∆∞·ªùi ƒë·∫°i di·ªán</h4>
                        <Form.Group className="mb-3">
                            <Form.Label>T√™n ng∆∞·ªùi ƒë·∫°i di·ªán</Form.Label>
                            <Form.Control type="text" placeholder="Nh·∫≠p t√™n ng∆∞·ªùi ƒë·∫°i di·ªán" name="ContactPerson" value={formData.ContactPerson} onChange={handleChange} />
                        </Form.Group>
                        <Form.Group className="mb-3">
                            <Form.Label>S·ªë ƒëi·ªán tho·∫°i</Form.Label>
                            <Form.Control type="text" placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i ng∆∞·ªùi ƒë·∫°i di·ªán" name="RPhone" value={formData.RPhone} onChange={handleChange} />
                        </Form.Group>
                        <td>
                            <Button variant="primary" type="submit" className="w-100" disabled={loading}>
                                {loading ? "ƒêang th√™m..." : "Th√™m m·ªõi"}
                            </Button>

                        </td>
                        <td><button type="button" className="btn btn-secondary ms-2" onClick={() => navigate("/supplierlist")}>
                            ‚¨ÖÔ∏è Quay l·∫°i
                        </button></td>
                        
                        
                                                                     
                    </Form>
                </Col>
            </Row>
        </Container>
    );
};

export default CreateSupplierForm;
