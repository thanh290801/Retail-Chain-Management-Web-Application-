import React, { useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom"; // üîπ Import useNavigate

const CashHandoverForm = () => {
    const [formData, setFormData] = useState({
        transactionCode: `TX-${Date.now()}`, // üîπ Sinh m√£ giao d·ªãch t·ª± ƒë·ªông
        employeeId: "",  // üë®‚Äçüíº Ng∆∞·ªùi b√†n giao
        receiverId: "",  // ü§ù Ng∆∞·ªùi nh·∫≠n b√†n giao (C√≥ th·ªÉ ƒë·ªÉ tr·ªëng)
        branchId: "",  // üè¢ Chi nh√°nh
        amount: "",  // üí∞ S·ªë ti·ªÅn
        transactionType: "CASH_HANDOVER",  // üîÑ Lo·∫°i giao d·ªãch
        description: "",  // üìù M√¥ t·∫£
        createdBy: "",  // ‚úçÔ∏è Ng∆∞·ªùi t·∫°o phi·∫øu (T√™n ƒëƒÉng nh·∫≠p)
        personName: "",  // üë§ T√™n ng∆∞·ªùi nh·∫≠n b√†n giao
    });

    const [message, setMessage] = useState("");
    const navigate = useNavigate(); // üîπ S·ª≠ d·ª•ng useNavigate ƒë·ªÉ chuy·ªÉn trang

    const handleChange = (e) => {
        const { name, value } = e.target;
        // N·∫øu l√† amount th√¨ chuy·ªÉn sang s·ªë
        if (name === "amount") {
            setFormData({ ...formData, [name]: parseFloat(value) });
        } else {
            setFormData({ ...formData, [name]: value });
        }
    };


    const handleSubmit = async (e) => {
        e.preventDefault();
        try {
            const response = await axios.post("https://localhost:5000/api/CashHandover/create", formData);
            setMessage(response.data.Message);
            setTimeout(() => navigate("/staffHome"), 1000);

        } catch (error) {
            setMessage(error.response?.data?.Message || "L·ªói khi t·∫°o phi·∫øu b√†n giao!");
        }
    };

    return (
        <div className="p-4 max-w-lg mx-auto bg-white shadow-md rounded-lg">
            <h2 className="text-xl font-bold mb-4">T·∫°o Phi·∫øu B√†n Giao Ti·ªÅn M·∫∑t</h2>
            {message && <p className="text-green-500">{message}</p>}
            <form onSubmit={handleSubmit} className="space-y-3">
                <input name="transactionCode" value={formData.transactionCode} readOnly className="w-full p-2 border rounded" />

                <input name="employeeId" placeholder="M√£ nh√¢n vi√™n" onChange={handleChange} className="w-full p-2 border rounded" required />

                <input name="receiverId" placeholder="M√£ ng∆∞·ªùi nh·∫≠n (n·∫øu c√≥)" onChange={handleChange} className="w-full p-2 border rounded" />

                <input name="branchId" placeholder="Chi nh√°nh" onChange={handleChange} className="w-full p-2 border rounded" required />

                <input type="number" name="amount" placeholder="S·ªë ti·ªÅn" onChange={handleChange} className="w-full p-2 border rounded" required />

                <select name="transactionType" onChange={handleChange} className="w-full p-2 border rounded">
                    <option value="CASH_HANDOVER">Thu ti·ªÅn m·∫∑t</option>
                    <option value="CASH_EXPENSE">Chi ti·ªÅn m·∫∑t</option>
                </select>

                <input name="description" placeholder="M√¥ t·∫£" onChange={handleChange} className="w-full p-2 border rounded" />

                <input name="createdBy" placeholder="Ng∆∞·ªùi t·∫°o" onChange={handleChange} className="w-full p-2 border rounded" required />

                <input name="personName" placeholder="T√™n ng∆∞·ªùi nh·∫≠n" onChange={handleChange} className="w-full p-2 border rounded" />

                <button type="submit" className="w-full bg-blue-500 text-white py-2 rounded">T·∫°o Phi·∫øu</button>
            </form>
        </div>
    );
};

export default CashHandoverForm;
