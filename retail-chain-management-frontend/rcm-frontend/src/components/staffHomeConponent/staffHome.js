import React, { useEffect, useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";

const StaffHomeComponent = () => {
    const navigate = useNavigate();
    const [cashOnHand, setCashOnHand] = useState(0);
    const [todayRevenue, setTodayRevenue] = useState(0);
    const [lowStockProducts, setLowStockProducts] = useState([]);
    const [showSalesMenu, setShowSalesMenu] = useState(false);
    const [currentTime, setCurrentTime] = useState(new Date());
    const [employeeInfo, setEmployeeInfo] = useState(null);
    // State ri√™ng cho t·ª´ng menu
    const [menus, setMenus] = useState({
        sales: false,
        transactions: false,
        inventory: false,
        warehouse: false,
        reports: false,
    });
    useEffect(() => {
        fetchCashOnHand();
        fetchTodayRevenue();
        fetchEmployeeInfo();
        fetchLowStockProducts();

        // C·∫≠p nh·∫≠t th·ªùi gian m·ªói gi√¢y
        const interval = setInterval(() => {
            setCurrentTime(new Date());
        }, 1000);
        return () => clearInterval(interval); // X√≥a interval khi component b·ªã unmount
    }, []);

    // API l·∫•y th√¥ng tin nh√¢n vi√™n hi·ªán t·∫°i
    const fetchEmployeeInfo = async () => {
        try {
            const token = localStorage.getItem("token"); // L·∫•y token x√°c th·ª±c
            if (!token) return;

            const response = await axios.get("http://localhost:5000/api/account/me", {
                headers: { Authorization: `Bearer ${token}` },
            });

            setEmployeeInfo(response.data); // C·∫≠p nh·∫≠t th√¥ng tin nh√¢n vi√™n v√†o state
        } catch (error) {
            console.error("L·ªói khi l·∫•y th√¥ng tin nh√¢n vi√™n:", error);
        }
    };
    const fetchCashOnHand = async () => {
        try {
            const response = await axios.get("http://localhost:5000/api/cash/cash-on-hand");
            setCashOnHand(response.data.cashOnHand);
        } catch (error) {
            console.error("L·ªói khi l·∫•y s·ªë d∆∞ qu·ªπ:", error);
        }
    };


    const fetchTodayRevenue = async () => {
        try {
            const response = await axios.get("http://localhost:5000/api/sales/today-revenue");
            setTodayRevenue(response.data.todayRevenue);
        } catch (error) {
            console.error("L·ªói khi l·∫•y doanh thu:", error);
        }
    };

    const fetchLowStockProducts = async () => {
        try {
            const response = await axios.get("http://localhost:5000/api/stock/low-stock");
            setLowStockProducts(response.data);
        } catch (error) {
            console.error("L·ªói khi l·∫•y danh s√°ch h√†ng s·∫Øp h·∫øt:", error);
        }
    };

    // H√†m ƒë·ªãnh d·∫°ng ng√†y & gi·ªù
    const formatDateTime = (date) => {
        const day = String(date.getDate()).padStart(2, "0");
        const month = String(date.getMonth() + 1).padStart(2, "0");
        const year = date.getFullYear();
        const hours = String(date.getHours()).padStart(2, "0");
        const minutes = String(date.getMinutes()).padStart(2, "0");
        const seconds = String(date.getSeconds()).padStart(2, "0");
        return `${day}/${month}/${year} - ${hours}:${minutes}:${seconds}`;
    };
    const toggleMenu = (menu) => {
        setMenus((prevMenus) => ({
            sales: false,
            transactions: false,
            inventory: false,
            warehouse: false,
            reports: false,
            [menu]: !prevMenus[menu],
        }));
    };
    return (
        <div className="min-h-screen bg-gray-100 p-6">
            {/* Menu ph√≠a tr√™n */}
            <div className="flex justify-between items-center bg-blue-600 p-4 rounded-lg shadow-md text-white relative">
                {/* Hi·ªÉn th·ªã th·ªùi gian & t√™n nh√¢n vi√™n */}
                <div className="flex items-center space-x-6 text-2xl font-bold">
                    <span>üë§ {employeeInfo?.fullname || "ƒêang t·∫£i..."}</span>
                    <span>üìÖ {formatDateTime(currentTime)}</span>

                </div>

                {/* C√°c n√∫t ch·ª©c nƒÉng */}
                <div className="flex space-x-4">
                    <button onClick={() => navigate("/checkin")} className="px-4 py-2 bg-white text-blue-600 rounded-lg font-semibold shadow-md">Check-in</button>

                    {/* B√°n h√†ng / Tr·∫£ h√†ng */}
                    <div className="relative">
                        <button onClick={() => toggleMenu("sales")} className="px-4 py-2 bg-white text-blue-600 rounded-lg font-semibold shadow-md">
                            B√°n h√†ng / Tr·∫£ h√†ng
                        </button>
                        {menus.sales && (
                            <div className="absolute left-0 mt-2 w-40 bg-white shadow-lg rounded-lg">
                                <button onClick={() => navigate("/pos")} className="block w-full px-4 py-2 text-left  text-blue-600 hover:bg-gray-100">B√°n h√†ng</button>
                                <button onClick={() => navigate("/refund")} className="block w-full px-4 py-2 text-left text-red-600 hover:bg-gray-100">Ho√†n tr·∫£</button>
                            </div>
                        )}
                    </div>

                    {/* L·ªãch s·ª≠ giao d·ªãch */}
                    <div className="relative">
                        <button onClick={() => toggleMenu("transactions")} className="px-4 py-2 bg-white text-blue-600 rounded-lg font-semibold shadow-md">
                            L·ªãch s·ª≠ giao d·ªãch
                        </button>
                        {menus.transactions && (
                            <div className="absolute left-0 mt-2 w-40 bg-white shadow-lg rounded-lg">
                                <button onClick={() => navigate("/history-pos")} className="block w-full px-4 py-2 text-left  text-blue-600 hover:bg-gray-100">L·ªãch s·ª≠ ƒë∆°n h√†ng</button>
                                <button onClick={() => navigate("/cashBook")} className="block w-full px-4 py-2 text-left text-red-600 hover:bg-gray-100"> S·ªï qu·ªπ </button>
                            </div>
                        )}
                    </div>

                    {/* Kho h√†ng */}
                    <div className="relative">
                        <button onClick={() => toggleMenu("warehouse")} className="px-4 py-2 bg-white text-blue-600 rounded-lg font-semibold shadow-md">
                            Kho h√†ng
                        </button>
                        {menus.warehouse && (
                            <div className="absolute left-0 mt-2 w-40 bg-white shadow-lg rounded-lg">
                                <button onClick={() => navigate("/kho")} className="block w-full px-4 py-2 text-left  text-blue-600 hover:bg-gray-100">Kho h√†ng</button>
                                <button onClick={() => navigate("/kiem-kho")} className="block w-full px-4 py-2 text-left text-red-600 hover:bg-gray-100">Phi·∫øu ki·ªÉm kho</button>
                            </div>
                        )}
                    </div>

                    {/* Nh·∫≠p h√†ng */}
                    <div className="relative">
                        <button onClick={() => toggleMenu("inventory")} className="px-4 py-2 bg-white text-blue-600 rounded-lg font-semibold shadow-md">
                            Nh·∫≠p h√†ng
                        </button>
                        {menus.inventory && (
                            <div className="absolute left-0 mt-2 w-40 bg-white shadow-lg rounded-lg">
                                <button onClick={() => navigate("/listOrder")} className="block w-full px-4 py-2 text-left  text-blue-600 hover:bg-gray-100">Danh s√°ch ƒë∆°n nh·∫≠p</button>
                                <button onClick={() => navigate("/them-phieu-nhapkho")} className="block w-full px-4 py-2 text-left text-red-600 hover:bg-gray-100">T·∫°o phi·∫øu nh·∫≠p kho</button>
                            </div>
                        )}
                    </div>

                    {/* B√°o c√°o */}
                    <div className="relative">
                        <button onClick={() => toggleMenu("reports")} className="px-4 py-2 bg-white text-blue-600 rounded-lg font-semibold shadow-md">
                            B√°o c√°o
                        </button>
                        {menus.reports && (
                            <div className="absolute left-0 mt-2 w-40 bg-white shadow-lg rounded-lg">
                                <button onClick={() => navigate("/endDaytReport")} className="block w-full px-4 py-2 text-left  text-blue-600 hover:bg-gray-100">B√°o c√°o cu·ªëi ng√†y</button>
                                <button onClick={() => navigate("/note")} className="block w-full px-4 py-2 text-left text-red-600 hover:bg-gray-100">B√°o c√°o kh√°c</button>
                            </div>
                        )}
                    </div>
                </div>
            </div>

            {/* Ph·∫ßn hi·ªÉn th·ªã s·ªë li·ªáu ch√≠nh */}
            <div className="mt-6 bg-white p-6 rounded-lg shadow-md text-center">
                <h2 className="text-2xl font-bold text-gray-700">Th√¥ng tin t√†i ch√≠nh</h2>
                <div className="flex justify-around mt-4">
                    <div className="p-4 bg-green-100 text-green-700 rounded-lg shadow-md w-1/3">
                        <h3 className="text-xl font-semibold">Ti·ªÅn m·∫∑t trong qu·ªπ</h3>
                        <p className="text-3xl font-bold">{cashOnHand.toLocaleString()} ƒë</p>
                    </div>
                    <div className="p-4 bg-blue-100 text-blue-700 rounded-lg shadow-md w-1/3">
                        <h3 className="text-xl font-semibold">Doanh thu h√¥m nay</h3>
                        <p className="text-3xl font-bold">{todayRevenue.toLocaleString()} ƒë</p>
                    </div>
                </div>
            </div>
            {/* Ph·∫ßn hi·ªÉn th·ªã h√†ng s·∫Øp h·∫øt */}
            <div className="mt-6 bg-white p-6 rounded-lg shadow-md">
                <h2 className="text-2xl font-bold text-gray-700 mb-4">H√†ng s·∫Øp h·∫øt</h2>
                {lowStockProducts.length > 0 ? (
                    <ul className="space-y-2">
                        {lowStockProducts.map((product, index) => (
                            <li key={index} className="p-3 bg-red-100 text-red-700 rounded-md shadow-md">
                                {product.name} - C√≤n l·∫°i: <strong>{product.quantity}</strong> {product.unit}
                            </li>
                        ))}
                    </ul>
                ) : (
                    <p className="text-gray-500">Kh√¥ng c√≥ m·∫∑t h√†ng n√†o s·∫Øp h·∫øt.</p>
                )}
            </div>
        </div>
    );
};

export default StaffHomeComponent;
