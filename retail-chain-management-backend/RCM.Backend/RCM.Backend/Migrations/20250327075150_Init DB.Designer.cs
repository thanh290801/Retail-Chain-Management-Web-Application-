// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RCM.Backend.Models;

#nullable disable

namespace RCM.Backend.Migrations
{
    [DbContext(typeof(RetailChainContext))]
    [Migration("20250327075150_Init DB")]
    partial class InitDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AccountEmployee", b =>
                {
                    b.Property<int>("AccountsAccountId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeesEmployeeId")
                        .HasColumnType("int");

                    b.HasKey("AccountsAccountId", "EmployeesEmployeeId");

                    b.HasIndex("EmployeesEmployeeId");

                    b.ToTable("AccountEmployee");
                });

            modelBuilder.Entity("RCM.Backend.DTOs.ShiftDTO+ShiftSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("TotalShifts")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShiftSettings", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("OtpexpireTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ResetOtp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AccountId");

                    b.HasIndex(new[] { "Username" }, "UQ__Account__536C85E46CF97CE1")
                        .IsUnique();

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.AttendanceCheckIn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckInTime")
                        .HasColumnType("datetime");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("OnTime")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AttendanceCheckIn", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.AttendanceCheckOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CheckOutTime")
                        .HasColumnType("datetime");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AttendanceCheckOut", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.AttendanceRecord", b =>
                {
                    b.Property<int>("AttendanceRecordsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceRecordsId"), 1L, 1);

                    b.Property<DateTime?>("CheckIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckOut")
                        .HasColumnType("datetime");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceRecordsId")
                        .HasName("PK__Attendan__6D2B1F0C4A22C7E5");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AttendanceRecord");
                });

            modelBuilder.Entity("RCM.Backend.Models.Batch", b =>
                {
                    b.Property<int>("BatchesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchesId"), 1L, 1);

                    b.Property<DateTime?>("ReceivedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("received_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int")
                        .HasColumnName("warehouse_id");

                    b.HasKey("BatchesId")
                        .HasName("PK__batches__D7870D5CBB7EFCFE");

                    b.HasIndex("WarehouseId");

                    b.ToTable("batches", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.BatchDetail", b =>
                {
                    b.Property<int>("BatchDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Batch_detailsId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchDetailsId"), 1L, 1);

                    b.Property<int>("BatchId")
                        .HasColumnType("int")
                        .HasColumnName("batch_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int?>("PurchaseOrderId")
                        .HasColumnType("int")
                        .HasColumnName("purchase_order_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("BatchDetailsId")
                        .HasName("PK__batch_de__04D3CE3069F8D36A");

                    b.HasIndex("BatchId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("batch_details", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.Cash", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("note");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int")
                        .HasColumnName("payment_method");

                    b.Property<bool?>("Type")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("CASH", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.CashHandover", b =>
                {
                    b.Property<int>("HandoverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HandoverID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HandoverId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("('Không xác d?nh')");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<DateTime>("TransactionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TransactionType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('Thu')");

                    b.HasKey("HandoverId")
                        .HasName("PK__Cash_Han__DB2A1F61CE3A7914");

                    b.HasIndex("BranchId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ReceiverId");

                    b.ToTable("Cash_Handover", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.DailySalesReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("date")
                        .HasColumnName("report_date");

                    b.Property<int>("TotalOrders")
                        .HasColumnType("int")
                        .HasColumnName("total_orders");

                    b.Property<decimal>("TotalSales")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_sales");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int")
                        .HasColumnName("warehouse_id");

                    b.HasKey("ReportId")
                        .HasName("PK__daily_sa__D5BD48E518F85104");

                    b.HasIndex("WarehouseId");

                    b.ToTable("daily_sales_reports", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("FixedSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Hometown")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsCheckedIn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("WorkShiftId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("AccountId")
                        .IsUnique()
                        .HasFilter("[AccountID] IS NOT NULL");

                    b.HasIndex("BranchId");

                    b.HasIndex(new[] { "IdentityNumber" }, "UQ__Employee__6354A73FB4499D6D")
                        .IsUnique();

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.EndShift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShiftID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShiftId"), 1L, 1);

                    b.Property<decimal>("BankCollected")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<decimal>("CashAtEnd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashAtStart")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashCollected")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<decimal>("TotalSales")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ShiftId")
                        .HasName("PK__End_Shif__C0A838E1F05C106C");

                    b.HasIndex("BranchId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("End_Shifts", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Employeeid")
                        .HasColumnType("int")
                        .HasColumnName("employeeid");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("payment_status")
                        .HasDefaultValueSql("('Pending')");

                    b.Property<int>("ShopId")
                        .HasColumnType("int")
                        .HasColumnName("shop_id");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_amount");

                    b.HasKey("OrderId");

                    b.HasIndex("Employeeid");

                    b.HasIndex("ShopId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("quantity");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_price");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("unit_price");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.OvertimeRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsApproved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Reason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<decimal>("TotalHours")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("OvertimeRecords");
                });

            modelBuilder.Entity("RCM.Backend.Models.PenaltyPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PenaltyPayments");
                });

            modelBuilder.Entity("RCM.Backend.Models.Product", b =>
                {
                    b.Property<int>("ProductsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductsId"), 1L, 1);

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("barcode");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("category");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("image_url");

                    b.Property<bool?>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_enabled")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unit");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("volume");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("weight");

                    b.HasKey("ProductsId")
                        .HasName("PK__products__BB48EDE5F3F1EB85");

                    b.HasIndex(new[] { "Barcode" }, "UQ__products__C16E36F8C3CC1692")
                        .IsUnique();

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.ProductPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("EffectiveDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("effective_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("product_prices", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.ProductPriceHistory", b =>
                {
                    b.Property<int>("PriceHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PriceHistoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceHistoryId"), 1L, 1);

                    b.Property<DateTime?>("ChangeDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("change_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ChangedBy")
                        .HasColumnType("int")
                        .HasColumnName("changed_by");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("new_price");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("old_price");

                    b.Property<string>("PriceType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("price_type");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int")
                        .HasColumnName("warehouse_id");

                    b.HasKey("PriceHistoryId")
                        .HasName("PK__product___A927CB2B68C0B1C4");

                    b.HasIndex("ChangedBy");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("product_price_history", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionsId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("discount_percent");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int")
                        .HasColumnName("warehouse_id");

                    b.HasKey("PromotionsId")
                        .HasName("PK__promotio__DBE22B922F2EDACB");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("promotions", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.PurchaseCost", b =>
                {
                    b.Property<int>("CostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CostID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CostId"), 1L, 1);

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int")
                        .HasColumnName("PurchaseOrderID");

                    b.Property<DateTime>("RecordedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CostId")
                        .HasName("PK__Purchase__8285231E4A994A7F");

                    b.HasIndex("BranchId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("Purchase_Costs", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("PurchaseOrdersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Purchase_ordersId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrdersId"), 1L, 1);

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("order_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.Property<int?>("WarehousesId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseOrdersId")
                        .HasName("PK__purchase__9736EF3EF43D85EF");

                    b.HasIndex("SupplierId");

                    b.HasIndex("WarehousesId");

                    b.ToTable("purchase_orders", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.PurchaseOrderItem", b =>
                {
                    b.Property<int>("PurchaseOrderItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Purchase_order_itemsId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderItemsId"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int")
                        .HasColumnName("purchase_order_id");

                    b.Property<int>("QuantityOrdered")
                        .HasColumnType("int")
                        .HasColumnName("quantity_ordered");

                    b.Property<int?>("QuantityReceived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("quantity_received")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("PurchaseOrderItemsId")
                        .HasName("PK__purchase__4120509F6B7B071E");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("purchase_order_items", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.Refund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Employeeid")
                        .HasColumnType("int")
                        .HasColumnName("employeeid");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<decimal>("RefundAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("refund_amount");

                    b.Property<DateTime>("RefundDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("refund_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RefundStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("refund_status")
                        .HasDefaultValueSql("('Pending')");

                    b.HasKey("Id");

                    b.HasIndex("Employeeid");

                    b.HasIndex("OrderId");

                    b.ToTable("Refund", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.RefundDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("quantity");

                    b.Property<int>("RefundId")
                        .HasColumnType("int")
                        .HasColumnName("refund_id");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_price");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("unit_price");

                    b.HasKey("Id");

                    b.HasIndex("RefundId");

                    b.ToTable("RefundDetail", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.Salary", b =>
                {
                    b.Property<int>("SalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalaryId"), 1L, 1);

                    b.Property<int?>("BonusSalary")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("FinalSalary")
                        .HasColumnType("int");

                    b.Property<int?>("FixedSalary")
                        .HasColumnType("int");

                    b.Property<int?>("Penalty")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("SalaryId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Salary", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.SalaryPaymentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PaidAmount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("SalaryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SalaryId");

                    b.ToTable("SalaryPaymentHistory", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.SalesReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ReportMonth")
                        .HasColumnType("date")
                        .HasColumnName("report_month");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_cost");

                    b.Property<int>("TotalOrders")
                        .HasColumnType("int")
                        .HasColumnName("total_orders");

                    b.Property<decimal>("TotalProfit")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_profit");

                    b.Property<decimal>("TotalSalary")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_salary");

                    b.Property<decimal>("TotalSales")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("total_sales");

                    b.HasKey("Id");

                    b.ToTable("sales_reports", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.StockAdjustment", b =>
                {
                    b.Property<int>("StockAdjustmentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockAdjustmentsId"), 1L, 1);

                    b.Property<DateTime?>("AdjustmentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("adjustment_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AuditorId")
                        .HasColumnType("int")
                        .HasColumnName("auditor_id");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("notes");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int")
                        .HasColumnName("warehouse_id");

                    b.HasKey("StockAdjustmentsId")
                        .HasName("PK__stock_ad__02056934008DB342");

                    b.HasIndex("AuditorId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("stock_adjustments", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.StockAdjustmentDetail", b =>
                {
                    b.Property<int>("StockAdjustmentDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockAdjustmentDetailsId"), 1L, 1);

                    b.Property<int>("AdjustedQuantity")
                        .HasColumnType("int")
                        .HasColumnName("adjusted_quantity");

                    b.Property<int>("AdjustmentId")
                        .HasColumnType("int")
                        .HasColumnName("adjustment_id");

                    b.Property<int>("PreviousQuantity")
                        .HasColumnType("int")
                        .HasColumnName("previous_quantity");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<string>("Reason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("reason");

                    b.HasKey("StockAdjustmentDetailsId")
                        .HasName("PK__stock_ad__5443DBDDEC7A5983");

                    b.HasIndex("AdjustmentId");

                    b.HasIndex("ProductId");

                    b.ToTable("stock_adjustment_details", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.StockAuditDetail", b =>
                {
                    b.Property<int>("StockAuditDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockAuditDetailsId"), 1L, 1);

                    b.Property<int>("AuditId")
                        .HasColumnType("int")
                        .HasColumnName("audit_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("RecordedQuantity")
                        .HasColumnType("int")
                        .HasColumnName("recorded_quantity");

                    b.HasKey("StockAuditDetailsId")
                        .HasName("PK__stock_au__814DB73894F66C3F");

                    b.HasIndex("AuditId");

                    b.HasIndex("ProductId");

                    b.ToTable("stock_audit_details", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.StockAuditRecord", b =>
                {
                    b.Property<int>("StockAuditRecordsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockAuditRecordsId"), 1L, 1);

                    b.Property<DateTime?>("AuditDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("audit_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AuditorId")
                        .HasColumnType("int")
                        .HasColumnName("auditor_id");

                    b.Property<int?>("CoAuditorId")
                        .HasColumnType("int")
                        .HasColumnName("co_auditor_id");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int")
                        .HasColumnName("warehouse_id");

                    b.HasKey("StockAuditRecordsId")
                        .HasName("PK__stock_au__1C0D2BE394761EEE");

                    b.HasIndex("AuditorId");

                    b.HasIndex("CoAuditorId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("stock_audit_records", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.StockLevel", b =>
                {
                    b.Property<int>("StockLevelsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Stock_levelsId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockLevelsId"), 1L, 1);

                    b.Property<int>("MinQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("min_quantity")
                        .HasDefaultValueSql("((20))");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("purchase_price");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("RetailPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("retail_price");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int")
                        .HasColumnName("warehouse_id");

                    b.Property<decimal?>("WholesalePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("wholesale_price");

                    b.HasKey("StockLevelsId")
                        .HasName("PK__stock_le__76AB5D15AAAE7868");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("stock_levels", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.Supplier", b =>
                {
                    b.Property<int>("SuppliersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuppliersId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("contact_person");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.HasKey("SuppliersId")
                        .HasName("PK__supplier__8AB703A4D1582F49");

                    b.ToTable("suppliers", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.SupplierProduct", b =>
                {
                    b.Property<int>("SupplierProductsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierProductsId"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.HasKey("SupplierProductsId")
                        .HasName("PK__supplier__6892C21ED19AEF7F");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.ToTable("supplier_products", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transaction_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bank_account");

                    b.Property<int>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("branch_id");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<int?>("HandoverId")
                        .HasColumnType("int")
                        .HasColumnName("handover_id");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("payment_method");

                    b.Property<string>("PerformedBy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("performed_by");

                    b.Property<string>("ReferenceId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("reference_id");

                    b.Property<int?>("RefundId")
                        .HasColumnType("int")
                        .HasColumnName("refund_id");

                    b.Property<string>("TransactionCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("transaction_code");

                    b.Property<DateTime?>("TransactionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("transaction_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("transaction_type");

                    b.HasKey("TransactionId");

                    b.HasIndex("BranchId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("HandoverId");

                    b.HasIndex("OrderId");

                    b.HasIndex("RefundId");

                    b.HasIndex(new[] { "TransactionCode" }, "UQ__Transact__DD5740BEF432A0F9")
                        .IsUnique();

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("RCM.Backend.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehousesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehousesId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("WarehousesId")
                        .HasName("PK__warehous__00D1C5832338674B");

                    b.ToTable("warehouses", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.WarehouseTransfer", b =>
                {
                    b.Property<int>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TransferID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransferId"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int>("FromWarehouseId")
                        .HasColumnType("int")
                        .HasColumnName("from_warehouse_id");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("notes");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("('pending')");

                    b.Property<int>("ToWarehouseId")
                        .HasColumnType("int")
                        .HasColumnName("to_warehouse_id");

                    b.Property<DateTime?>("TransferDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("transfer_date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("TransferId")
                        .HasName("PK__warehous__9549017165A1B91A");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("FromWarehouseId");

                    b.HasIndex("ToWarehouseId");

                    b.ToTable("warehouse_transfers", (string)null);
                });

            modelBuilder.Entity("RCM.Backend.Models.WarehouseTransferDetail", b =>
                {
                    b.Property<int>("TransferDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TransferDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransferDetailId"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int>("TransferId")
                        .HasColumnType("int")
                        .HasColumnName("transfer_id");

                    b.HasKey("TransferDetailId")
                        .HasName("PK__warehous__F9BF690F258FA262");

                    b.HasIndex("ProductId");

                    b.HasIndex("TransferId");

                    b.ToTable("warehouse_transfer_details", (string)null);
                });

            modelBuilder.Entity("AccountEmployee", b =>
                {
                    b.HasOne("RCM.Backend.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("AccountsAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RCM.Backend.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RCM.Backend.Models.AttendanceCheckIn", b =>
                {
                    b.HasOne("RCM.Backend.Models.Employee", "Employee")
                        .WithMany("AttendanceCheckIns")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Attendanc__Emplo__18EBB532");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RCM.Backend.Models.AttendanceCheckOut", b =>
                {
                    b.HasOne("RCM.Backend.Models.Employee", "Employee")
                        .WithMany("AttendanceCheckOuts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Attendanc__Emplo__1BC821DD");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RCM.Backend.Models.AttendanceRecord", b =>
                {
                    b.HasOne("RCM.Backend.Models.Employee", "Employee")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__Attendanc__Emplo__114A936A");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RCM.Backend.Models.Batch", b =>
                {
                    b.HasOne("RCM.Backend.Models.Warehouse", "Warehouse")
                        .WithMany("Batches")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__batches__warehou__151B244E");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RCM.Backend.Models.BatchDetail", b =>
                {
                    b.HasOne("RCM.Backend.Models.Batch", "Batch")
                        .WithMany("BatchDetails")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__batch_det__batch__123EB7A3");

                    b.HasOne("RCM.Backend.Models.Product", "Product")
                        .WithMany("BatchDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__batch_det__produ__1332DBDC");

                    b.HasOne("RCM.Backend.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("BatchDetails")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__batch_det__purch__14270015");

                    b.Navigation("Batch");

                    b.Navigation("Product");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("RCM.Backend.Models.Cash", b =>
                {
                    b.HasOne("RCM.Backend.Models.Warehouse", "Branch")
                        .WithMany("Cashes")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FK__CASH__BranchId__7A672E12");

                    b.HasOne("RCM.Backend.Models.Employee", "Employee")
                        .WithMany("Cashes")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CASH__EmployeeId__73BA3083");

                    b.Navigation("Branch");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RCM.Backend.Models.CashHandover", b =>
                {
                    b.HasOne("RCM.Backend.Models.Warehouse", "Branch")
                        .WithMany("CashHandovers")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FK__Cash_Hand__Branc__160F4887");

                    b.HasOne("RCM.Backend.Models.Employee", "Employee")
                        .WithMany("CashHandoverEmployees")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__Cash_Hand__Emplo__17036CC0");

                    b.HasOne("RCM.Backend.Models.Employee", "Receiver")
                        .WithMany("CashHandoverReceivers")
                        .HasForeignKey("ReceiverId")
                        .HasConstraintName("FK__Cash_Hand__Recei__17F790F9");

                    b.Navigation("Branch");

                    b.Navigation("Employee");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("RCM.Backend.Models.DailySalesReport", b =>
                {
                    b.HasOne("RCM.Backend.Models.Warehouse", "Warehouse")
                        .WithMany("DailySalesReports")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__daily_sal__wareh__18EBB532");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RCM.Backend.Models.Employee", b =>
                {
                    b.HasOne("RCM.Backend.Models.Account", "Account")
                        .WithOne("Employee")
                        .HasForeignKey("RCM.Backend.Models.Employee", "AccountId")
                        .HasConstraintName("FK_Employee_Account");

                    b.HasOne("RCM.Backend.Models.Warehouse", "Branch")
                        .WithMany("Employees")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK__Employee__Branch__1AD3FDA4");

                    b.Navigation("Account");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("RCM.Backend.Models.EndShift", b =>
                {
                    b.HasOne("RCM.Backend.Models.Warehouse", "Branch")
                        .WithMany("EndShifts")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FK__End_Shift__Branc__1BC821DD");

                    b.HasOne("RCM.Backend.Models.Employee", "Employee")
                        .WithMany("EndShifts")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__End_Shift__Emplo__1CBC4616");

                    b.Navigation("Branch");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RCM.Backend.Models.Order", b =>
                {
                    b.HasOne("RCM.Backend.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("Employeeid")
                        .IsRequired()
                        .HasConstraintName("FK__Order__employeei__1DB06A4F");

                    b.HasOne("RCM.Backend.Models.Warehouse", "Shop")
                        .WithMany("Orders")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Order__shop_id__1EA48E88");

                    b.Navigation("Employee");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("RCM.Backend.Models.OrderDetail", b =>
                {
                    b.HasOne("RCM.Backend.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__order__1F98B2C1");

                    b.HasOne("RCM.Backend.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__produ__208CD6FA");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RCM.Backend.Models.OvertimeRecord", b =>
                {
                    b.HasOne("RCM.Backend.Models.Employee", "Employee")
                        .WithMany("OvertimeRecords")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__OvertimeR__Emplo__160F4887");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RCM.Backend.Models.PenaltyPayment", b =>
                {
                    b.HasOne("RCM.Backend.Models.Employee", "Employee")
                        .WithMany("PenaltyPayments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PenaltyPa__Emplo__0E6E26BF");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RCM.Backend.Models.ProductPrice", b =>
                {
                    b.HasOne("RCM.Backend.Models.Product", "Product")
                        .WithMany("ProductPrices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__product_p__produ__02FC7413");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RCM.Backend.Models.ProductPriceHistory", b =>
                {
                    b.HasOne("RCM.Backend.Models.Account", "ChangedByNavigation")
                        .WithMany("ProductPriceHistories")
                        .HasForeignKey("ChangedBy")
                        .IsRequired()
                        .HasConstraintName("FK__product_p__chang__2180FB33");

                    b.HasOne("RCM.Backend.Models.Product", "Product")
                        .WithMany("ProductPriceHistories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__product_p__produ__22751F6C");

                    b.HasOne("RCM.Backend.Models.Warehouse", "Warehouse")
                        .WithMany("ProductPriceHistories")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__product_p__wareh__236943A5");

                    b.Navigation("ChangedByNavigation");

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RCM.Backend.Models.Promotion", b =>
                {
                    b.HasOne("RCM.Backend.Models.Product", "Product")
                        .WithMany("Promotions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__promotion__produ__245D67DE");

                    b.HasOne("RCM.Backend.Models.Warehouse", "Warehouse")
                        .WithMany("Promotions")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__promotion__wareh__25518C17");

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RCM.Backend.Models.PurchaseCost", b =>
                {
                    b.HasOne("RCM.Backend.Models.Warehouse", "Branch")
                        .WithMany("PurchaseCosts")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FK__Purchase___Branc__2645B050");

                    b.HasOne("RCM.Backend.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseCosts")
                        .HasForeignKey("PurchaseOrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Purchase___Purch__2739D489");

                    b.Navigation("Branch");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("RCM.Backend.Models.PurchaseOrder", b =>
                {
                    b.HasOne("RCM.Backend.Models.Supplier", "Supplier")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__purchase___suppl__2A164134");

                    b.HasOne("RCM.Backend.Models.Warehouse", "Warehouses")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("WarehousesId");

                    b.Navigation("Supplier");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("RCM.Backend.Models.PurchaseOrderItem", b =>
                {
                    b.HasOne("RCM.Backend.Models.Product", "Product")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__purchase___produ__282DF8C2");

                    b.HasOne("RCM.Backend.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__purchase___purch__29221CFB");

                    b.Navigation("Product");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("RCM.Backend.Models.Refund", b =>
                {
                    b.HasOne("RCM.Backend.Models.Employee", "Employee")
                        .WithMany("Refunds")
                        .HasForeignKey("Employeeid")
                        .IsRequired()
                        .HasConstraintName("FK__Refund__employee__2B0A656D");

                    b.HasOne("RCM.Backend.Models.Order", "Order")
                        .WithMany("Refunds")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Refund__order_id__2BFE89A6");

                    b.Navigation("Employee");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RCM.Backend.Models.RefundDetail", b =>
                {
                    b.HasOne("RCM.Backend.Models.Refund", "Refund")
                        .WithMany("RefundDetails")
                        .HasForeignKey("RefundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RefundDet__refun__2CF2ADDF");

                    b.Navigation("Refund");
                });

            modelBuilder.Entity("RCM.Backend.Models.Salary", b =>
                {
                    b.HasOne("RCM.Backend.Models.Employee", "Employee")
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__Salary__Employee__2DE6D218");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RCM.Backend.Models.SalaryPaymentHistory", b =>
                {
                    b.HasOne("RCM.Backend.Models.Employee", "Employee")
                        .WithMany("SalaryPaymentHistories")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__SalaryPay__Emplo__787EE5A0");

                    b.HasOne("RCM.Backend.Models.Salary", "Salary")
                        .WithMany("SalaryPaymentHistories")
                        .HasForeignKey("SalaryId")
                        .IsRequired()
                        .HasConstraintName("FK__SalaryPay__Salar__0B91BA14");

                    b.Navigation("Employee");

                    b.Navigation("Salary");
                });

            modelBuilder.Entity("RCM.Backend.Models.StockAdjustment", b =>
                {
                    b.HasOne("RCM.Backend.Models.Account", "Auditor")
                        .WithMany("StockAdjustments")
                        .HasForeignKey("AuditorId")
                        .IsRequired()
                        .HasConstraintName("FK__stock_adj__audit__30C33EC3");

                    b.HasOne("RCM.Backend.Models.Warehouse", "Warehouse")
                        .WithMany("StockAdjustments")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__stock_adj__wareh__31B762FC");

                    b.Navigation("Auditor");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RCM.Backend.Models.StockAdjustmentDetail", b =>
                {
                    b.HasOne("RCM.Backend.Models.StockAdjustment", "Adjustment")
                        .WithMany("StockAdjustmentDetails")
                        .HasForeignKey("AdjustmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__stock_adj__adjus__2EDAF651");

                    b.HasOne("RCM.Backend.Models.Product", "Product")
                        .WithMany("StockAdjustmentDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__stock_adj__produ__2FCF1A8A");

                    b.Navigation("Adjustment");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RCM.Backend.Models.StockAuditDetail", b =>
                {
                    b.HasOne("RCM.Backend.Models.StockAuditRecord", "Audit")
                        .WithMany("StockAuditDetails")
                        .HasForeignKey("AuditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__stock_aud__audit__32AB8735");

                    b.HasOne("RCM.Backend.Models.Product", "Product")
                        .WithMany("StockAuditDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__stock_aud__produ__339FAB6E");

                    b.Navigation("Audit");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RCM.Backend.Models.StockAuditRecord", b =>
                {
                    b.HasOne("RCM.Backend.Models.Account", "Auditor")
                        .WithMany("StockAuditRecordAuditors")
                        .HasForeignKey("AuditorId")
                        .IsRequired()
                        .HasConstraintName("FK__stock_aud__audit__3493CFA7");

                    b.HasOne("RCM.Backend.Models.Account", "CoAuditor")
                        .WithMany("StockAuditRecordCoAuditors")
                        .HasForeignKey("CoAuditorId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__stock_aud__co_au__3587F3E0");

                    b.HasOne("RCM.Backend.Models.Warehouse", "Warehouse")
                        .WithMany("StockAuditRecords")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__stock_aud__wareh__367C1819");

                    b.Navigation("Auditor");

                    b.Navigation("CoAuditor");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RCM.Backend.Models.StockLevel", b =>
                {
                    b.HasOne("RCM.Backend.Models.Product", "Product")
                        .WithMany("StockLevels")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__stock_lev__produ__37703C52");

                    b.HasOne("RCM.Backend.Models.Warehouse", "Warehouse")
                        .WithMany("StockLevels")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__stock_lev__wareh__3864608B");

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("RCM.Backend.Models.SupplierProduct", b =>
                {
                    b.HasOne("RCM.Backend.Models.Product", "Product")
                        .WithMany("SupplierProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__supplier___produ__395884C4");

                    b.HasOne("RCM.Backend.Models.Supplier", "Supplier")
                        .WithMany("SupplierProducts")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__supplier___suppl__3A4CA8FD");

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("RCM.Backend.Models.Transaction", b =>
                {
                    b.HasOne("RCM.Backend.Models.Warehouse", "Branch")
                        .WithMany("Transactions")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FK_Transactions_Branch");

                    b.HasOne("RCM.Backend.Models.Employee", "Employee")
                        .WithMany("Transactions")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_Transactions_Employee");

                    b.HasOne("RCM.Backend.Models.CashHandover", "Handover")
                        .WithMany("Transactions")
                        .HasForeignKey("HandoverId")
                        .HasConstraintName("FK_Transactions_Handover");

                    b.HasOne("RCM.Backend.Models.Order", "Order")
                        .WithMany("Transactions")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_Transactions_Order");

                    b.HasOne("RCM.Backend.Models.Refund", "Refund")
                        .WithMany("Transactions")
                        .HasForeignKey("RefundId")
                        .HasConstraintName("FK_Transactions_Refund");

                    b.Navigation("Branch");

                    b.Navigation("Employee");

                    b.Navigation("Handover");

                    b.Navigation("Order");

                    b.Navigation("Refund");
                });

            modelBuilder.Entity("RCM.Backend.Models.WarehouseTransfer", b =>
                {
                    b.HasOne("RCM.Backend.Models.Account", "CreatedByNavigation")
                        .WithMany("WarehouseTransfers")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__warehouse__creat__41EDCAC5");

                    b.HasOne("RCM.Backend.Models.Warehouse", "FromWarehouse")
                        .WithMany("WarehouseTransferFromWarehouses")
                        .HasForeignKey("FromWarehouseId")
                        .IsRequired()
                        .HasConstraintName("FK__warehouse__from___42E1EEFE");

                    b.HasOne("RCM.Backend.Models.Warehouse", "ToWarehouse")
                        .WithMany("WarehouseTransferToWarehouses")
                        .HasForeignKey("ToWarehouseId")
                        .IsRequired()
                        .HasConstraintName("FK__warehouse__to_wa__43D61337");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("FromWarehouse");

                    b.Navigation("ToWarehouse");
                });

            modelBuilder.Entity("RCM.Backend.Models.WarehouseTransferDetail", b =>
                {
                    b.HasOne("RCM.Backend.Models.Product", "Product")
                        .WithMany("WarehouseTransferDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__warehouse__produ__40058253");

                    b.HasOne("RCM.Backend.Models.WarehouseTransfer", "Transfer")
                        .WithMany("WarehouseTransferDetails")
                        .HasForeignKey("TransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__warehouse__trans__40F9A68C");

                    b.Navigation("Product");

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("RCM.Backend.Models.Account", b =>
                {
                    b.Navigation("Employee");

                    b.Navigation("ProductPriceHistories");

                    b.Navigation("StockAdjustments");

                    b.Navigation("StockAuditRecordAuditors");

                    b.Navigation("StockAuditRecordCoAuditors");

                    b.Navigation("WarehouseTransfers");
                });

            modelBuilder.Entity("RCM.Backend.Models.Batch", b =>
                {
                    b.Navigation("BatchDetails");
                });

            modelBuilder.Entity("RCM.Backend.Models.CashHandover", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("RCM.Backend.Models.Employee", b =>
                {
                    b.Navigation("AttendanceCheckIns");

                    b.Navigation("AttendanceCheckOuts");

                    b.Navigation("AttendanceRecords");

                    b.Navigation("CashHandoverEmployees");

                    b.Navigation("CashHandoverReceivers");

                    b.Navigation("Cashes");

                    b.Navigation("EndShifts");

                    b.Navigation("Orders");

                    b.Navigation("OvertimeRecords");

                    b.Navigation("PenaltyPayments");

                    b.Navigation("Refunds");

                    b.Navigation("Salaries");

                    b.Navigation("SalaryPaymentHistories");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("RCM.Backend.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Refunds");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("RCM.Backend.Models.Product", b =>
                {
                    b.Navigation("BatchDetails");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductPriceHistories");

                    b.Navigation("ProductPrices");

                    b.Navigation("Promotions");

                    b.Navigation("PurchaseOrderItems");

                    b.Navigation("StockAdjustmentDetails");

                    b.Navigation("StockAuditDetails");

                    b.Navigation("StockLevels");

                    b.Navigation("SupplierProducts");

                    b.Navigation("WarehouseTransferDetails");
                });

            modelBuilder.Entity("RCM.Backend.Models.PurchaseOrder", b =>
                {
                    b.Navigation("BatchDetails");

                    b.Navigation("PurchaseCosts");

                    b.Navigation("PurchaseOrderItems");
                });

            modelBuilder.Entity("RCM.Backend.Models.Refund", b =>
                {
                    b.Navigation("RefundDetails");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("RCM.Backend.Models.Salary", b =>
                {
                    b.Navigation("SalaryPaymentHistories");
                });

            modelBuilder.Entity("RCM.Backend.Models.StockAdjustment", b =>
                {
                    b.Navigation("StockAdjustmentDetails");
                });

            modelBuilder.Entity("RCM.Backend.Models.StockAuditRecord", b =>
                {
                    b.Navigation("StockAuditDetails");
                });

            modelBuilder.Entity("RCM.Backend.Models.Supplier", b =>
                {
                    b.Navigation("PurchaseOrders");

                    b.Navigation("SupplierProducts");
                });

            modelBuilder.Entity("RCM.Backend.Models.Warehouse", b =>
                {
                    b.Navigation("Batches");

                    b.Navigation("CashHandovers");

                    b.Navigation("Cashes");

                    b.Navigation("DailySalesReports");

                    b.Navigation("Employees");

                    b.Navigation("EndShifts");

                    b.Navigation("Orders");

                    b.Navigation("ProductPriceHistories");

                    b.Navigation("Promotions");

                    b.Navigation("PurchaseCosts");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("StockAdjustments");

                    b.Navigation("StockAuditRecords");

                    b.Navigation("StockLevels");

                    b.Navigation("Transactions");

                    b.Navigation("WarehouseTransferFromWarehouses");

                    b.Navigation("WarehouseTransferToWarehouses");
                });

            modelBuilder.Entity("RCM.Backend.Models.WarehouseTransfer", b =>
                {
                    b.Navigation("WarehouseTransferDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
